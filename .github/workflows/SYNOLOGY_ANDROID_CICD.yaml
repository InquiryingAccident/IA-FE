name: PLANE-ACCIDENT-FINDER-FRONTEND

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_BUILD_TOOLS_VERSION: 35.0.0
      ANDROID_COMPILE_SDK: 35
      ANDROID_TARGET_SDK: 34
      ANDROID_MIN_SDK: 24
      ANDROID_NDK_VERSION: 27.1.12297006
      KOTLIN_VERSION: 2.0.21

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create .env file from secret
        run: echo "${{ secrets.ENV }}" > .env

      - name: Install Node dependencies
        run: npm install

      - name: Install additional dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass jq

      - name: Setup Android SDK Environment Variables
        run: |
          echo "ANDROID_BUILD_TOOLS_VERSION=$ANDROID_BUILD_TOOLS_VERSION" >> $GITHUB_ENV
          echo "ANDROID_COMPILE_SDK=$ANDROID_COMPILE_SDK" >> $GITHUB_ENV
          echo "ANDROID_TARGET_SDK=$ANDROID_TARGET_SDK" >> $GITHUB_ENV
          echo "ANDROID_MIN_SDK=$ANDROID_MIN_SDK" >> $GITHUB_ENV
          echo "ANDROID_NDK_VERSION=$ANDROID_NDK_VERSION" >> $GITHUB_ENV

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Decode and save debug.keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.DEBUG_KEYSTORE_BASE64 }}" | base64 --decode > android/app/debug.keystore

      - name: Build React Native APK
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Rename APK file
        run: |
          SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          DATE=$(date +'%y%m%d')
          APK_SOURCE="android/app/build/outputs/apk/release/app-release.apk"
          APK_TARGET="android/app/build/outputs/apk/release/plane-accident-finder-${DATE}-${SHORT_COMMIT_HASH}.apk"
          if [ -f "$APK_SOURCE" ]; then
            mv "$APK_SOURCE" "$APK_TARGET"
          else
            echo "APK source file not found: $APK_SOURCE"
            exit 1
          fi

      # 1) Ensure local JSON file exists
      - name: Ensure plane-accident-finder-cicd-history.json exists
        run: |
          JSON_PATH="android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json"
          mkdir -p $(dirname "$JSON_PATH")
          if [ ! -f "$JSON_PATH" ]; then
            echo '{"files": []}' > "$JSON_PATH"
          fi

      # 2) Download or initialize JSON file from Synology NAS
      - name: Download or initialize JSON file from Synology NAS
        env:
          SYNOSSH_HOST: ${{ secrets.SYNOSSH_HOST }}
          SYNOSSH_USERNAME: ${{ secrets.SYNOSSH_USERNAME }}
          SYNOSSH_PASSWORD: ${{ secrets.SYNOSSH_PASSWORD }}
        run: |
          JSON_PATH="android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json"
          if ! sshpass -p "$SYNOSSH_PASSWORD" scp -o StrictHostKeyChecking=no -P 2022 \
            $SYNOSSH_USERNAME@$SYNOSSH_HOST:/volume1/web/plane-accident-finder/downloads/plane-accident-finder-cicd-history.json "$JSON_PATH"; then
            echo "No existing JSON on NAS. Using local file."
          fi

      # 3) Update JSON file with build info
      - name: Update JSON file with build info
        run: |
          set -e
          FULL_COMMIT_HASH=$(git rev-parse HEAD)
          SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          DATE=$(date +'%y%m%d')
          APK_NAME="plane-accident-finder-${DATE}-${SHORT_COMMIT_HASH}.apk"
          FILE_PATH="android/app/build/outputs/apk/release/${APK_NAME}"
          FILE_SIZE=$(stat -c%s "$FILE_PATH")
          JSON_PATH="android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json"
          COMMIT_LINK="https://github.com/${GITHUB_REPOSITORY}/commit/${FULL_COMMIT_HASH}"
          
          UPDATED_JSON=$(jq --arg apk_name "$APK_NAME" \
                            --arg file_size "$FILE_SIZE" \
                            --arg build_date "$DATE" \
                            --arg commit_link "$COMMIT_LINK" \
                            --arg full_commit_hash "$FULL_COMMIT_HASH" \
            '.files += [{"apk_name": $apk_name, "file_size": $file_size, "build_date": $build_date, "commit_link": $commit_link, "full_commit_hash": $full_commit_hash}]' \
            "$JSON_PATH")
          
          echo "$UPDATED_JSON" > "$JSON_PATH"
          echo "Updated JSON file:"
          cat "$JSON_PATH"

      # 4) Upload build artifacts (APK + JSON)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plane-accident-finder
          path: |
            android/app/build/outputs/apk/release/plane-accident-finder-*.apk
            android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: plane-accident-finder
          path: android/app/build/outputs/

      - name: Verify JSON file
        run: |
          cat android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json

      - name: Upload APK and JSON to Synology NAS
        env:
          SYNOSSH_HOST: ${{ secrets.SYNOSSH_HOST }}
          SYNOSSH_USERNAME: ${{ secrets.SYNOSSH_USERNAME }}
          SYNOSSH_PASSWORD: ${{ secrets.SYNOSSH_PASSWORD }}
        run: |
          sshpass -p "$SYNOSSH_PASSWORD" scp -o StrictHostKeyChecking=no -P 2022 \
            android/app/build/outputs/apk/release/plane-accident-finder-*.apk \
            android/app/build/outputs/apk/release/plane-accident-finder-cicd-history.json \
            $SYNOSSH_USERNAME@$SYNOSSH_HOST:/volume1/web/plane-accident-finder/downloads/
